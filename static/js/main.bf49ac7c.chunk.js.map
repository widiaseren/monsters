{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/seacrh-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAGaA,G,MAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCHbC,G,MAAW,SAAAR,GAAK,OAEzB,aADA,CACA,OAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNtBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAWF,MCmDJG,G,wDAnDb,aAAc,IAAD,8BACX,gBAiBFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAhBtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALJ,E,gEAWO,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAE1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,+BAOjC,IAAD,EAC4BC,KAAKN,MAA/Bb,EADF,EACEA,SAAUU,EADZ,EACYA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK9B,UAAU,MAAf,UAWE,kDACA,cAAC,EAAD,CACEW,YAAY,mBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA9CVI,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bf49ac7c.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react'\r\nimport {Card} from '../card/card.component'\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = props => (\r\n    // console.log(props)\r\n    <div className='card-list'>\r\n        {\r\n            props.monsters.map(monster => \r\n                <Card key={monster.id} monster={monster}/>\r\n            )\r\n        }\r\n    </div>\r\n)","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input \r\n        className=\"search\"\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange= {handleChange}\r\n    />\r\n)","import React, { Component } from 'react'\r\n\r\nimport { CardList } from './components/card-list/card-list.component'\r\nimport { SearchBox } from './components/seacrh-box/search-box.component'\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super()\r\n\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: ''\r\n    }\r\n\r\n    // this.handleChange = this.handleChange.bind(this)\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json()) //converting to json format\r\n    // .then(users => console.log(users))\r\n    .then(users => this.setState({monsters: users}))\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ searchField: e.target.value })\r\n  }\r\n\r\n  render(){\r\n    const { monsters, searchField } = this.state\r\n    const filteredMonsters = monsters.filter(monster =>\r\n      monster.name.toLowerCase().includes(searchField.toLowerCase())      \r\n    )\r\n\r\n    return(\r\n      <div className=\"App\">\r\n        {/* <input \r\n          type=\"search\"\r\n          placeholder=\"Search Monster\"\r\n          onChange={ e => this.setState({ searchField: e.target.value })}\r\n          // onChange={e => {\r\n          //   this.setState({\r\n          //     searchField: e.target.value\r\n          //   }, () => console.log(this.state))\r\n          // }}\r\n        /> */}\r\n        <h1>Monster Rollodex</h1>\r\n        <SearchBox  \r\n          placeholder=\"Search Monsters \"\r\n          handleChange={this.handleChange}\r\n        />\r\n        <CardList monsters={filteredMonsters} />        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}